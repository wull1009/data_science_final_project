avg <- mean(da3[(r - 5):r, j], na.rm = TRUE)
# 将第r行以后的每列值补上平均数
da3[i,j] = avg
}
MWW=c(da$MW,rep(da$MW[r],385-r))
}
}
else{
MWW=c(da$MW)
}
da4=cbind(MWW,da3)
colnames(da4)[1] <- "MW"
return(da4)
}
he <- 0  # 初始化he为一个空的数据框
for (i in 1:length(data_list)) {
xx <- data_list[[i]]
yy <- data_process(xx)  # 得到第一个处理好的矩阵，有MW列
he <- he+yy  # 将yy添加到he中
};he
#找处理后的MW列的变点所在位置
real_cp = function(x) {
y = which(x > 23)
yy = unique(c(sapply(y, function(i) (i - 3):(i + 3))))
yy = yy[yy > 0 & yy <= length(x)]
return(yy)
}
truecp=real_cp(he[,1])
truecp
setwd("D:/吴小妞/兰慧")
library(hdbinseg)
data=he[,-c(1)]
#读入文件
library(readxl)
folder_path = "D:/下载/predictors2"
file_list = list.files(path = folder_path, pattern = "ds\\.xlsx$", full.names = TRUE)
data_list = list()
for (i in 1:length(file_list)) {
data_list[[i]] = read_excel(file_list[i])
}
names(data_list) <- paste0("data", 1:length(data_list))
# 循环读取每个文件
for (i in 1:length(file_list)) {
# 读取数据
temp_data <- read_excel(file_list[i])
# 动态创建变量名
assign(paste0("data", i), temp_data, envir = .GlobalEnv)
}
#1. 针对传统眼动数据的数据处理
data_process=function(da){
da=da[,c(3,4,5,9:14)]#取自己想取的列，其中原始数据第3列是MW
#输入的是有MW列的原始矩阵。
#返回的应该是有MW列的,没有缺失数据的,标准化过的矩阵
da2=da[, !colnames(da) %in% 'MW', drop = FALSE] #直接删掉MW列了
j = ncol(da2)
q = nrow(da2)
for(k in 1:j){
for (n in 1:q) {
if(da2[n,k] == 0 || is.na(da2[n,k])){
if(n > 3){
valid_values = da2[(n-3):(n-1), k]
valid_values = valid_values[valid_values != 0 & !is.na(valid_values)]
if(length(valid_values) > 0){
da2[[k]][n] = mean(valid_values)
} else {
da2[[k]][n] = 0
}
} else {
# 如果是前三行，设为0
da2[[k]][n] = 0
}
}
}
}
da3=scale(da2)
r=nrow(da3)
da3=rbind(da3,matrix(0,nrow=385-r,ncol=8))
if(r<385){
for(i in (r+1):385){
for(j in 1:8){
# 计算每列倒数5个值的平均数
avg <- mean(da3[(r - 5):r, j], na.rm = TRUE)
# 将第r行以后的每列值补上平均数
da3[i,j] = avg
}
MWW=c(da$MW,rep(da$MW[r],385-r))
}
}
else{
MWW=c(da$MW)
}
da4=cbind(MWW,da3)
colnames(da4)[1] <- "MW"
return(da4)
}
library(hdbinseg)
data=he[,-c(1)]
for (i in 1:length(data_list)) {
xx <- data_list[[i]]
yy <- data_process(xx)  # 得到第一个处理好的矩阵，有MW列
he <- he+yy  # 将yy添加到he中
};he
sessionInfo()
library(haven)
dataset=read_sas("D:/吴小妞/Emory/2024 Fall/BIOS 508 Biostatistical Methods/hamd_data.sas7bdat")
View(dataset)
head(dataset)
dataset
dataset[,1]
dataset=read_sas("D:/吴小妞/Emory/2024 Fall/BIOS 508 Biostatistical Methods/SAS Module 1 - descriptive stats and graphics.sas")
dbinom(7,size=10,prob=0.25)
1-0.016
3*0.984*0.016*0.016
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
cargs <- commandArgs(TRUE)
print(cargs)
message("The first argument is ", cargs[1])
message("The second argument is ", cargs[2])
# 1.概率密度函数
# p=0.5,n=5,求实验中成功2次的概率
dbinom(x=2,size=5,prob=0.5,log=F)
# 2.累积分布函数
# p=0.5,n=5,求实验中成功小于等于2次的概率
pbinom(x=2,size=5,prob=0.5)
# 2.累积分布函数
# p=0.5,n=5,求实验中成功小于等于2次的概率
pbinom(q=2,size=5,prob=0.5)
# 2.累积分布函数
# p=0.5,n=5,求实验中成功小于等于2次的概率
pbinom(q=2,size=5,prob=0.5,lower.tail = T,log.p = F)
#3.分位数函数
#求累积概率达到0.5的试验成功次数，即p(X<x)=0.5,求x
qbinom(p=0.5,size=5,prob=0.5,lower.tail = T,log.p = F)
url_for_data = "https://bit.ly/vrc01_data"
data=read.csv(url_for_data,header=T)
head(data)
head(data)
#Normal Distribution 正态分布
#normally distributed with mean of 65.5 and standard deviation of 2.5.
#P(X <= 69)
prob1 <- pnorm(69, mean = 65.5, sd = 2.5)
prob1
#We also want to know P(60=X =70)
prob2 <- pnorm(70, mean = 65.5, sd = 2.5) - pnorm(60, mean = 65.5, sd = 2.5);prob2
#
score_90th <- qnorm(0.9, mean = 430, sd = 100)
score_90th
#find x, such that P(X = x)=0.9.
score_90th <- qnorm(0.9, mean = 430, sd = 100)
#find x, such that P(X = x)=0.9.
score_90th <- qnorm(0.9, mean = 430, sd = 100);score_90th
#二、Poisson Distribution 泊松分布
#1. 计算概率密度值
prob <- dpois(5, lambda = 4.6)
# 2. 计算累积分布值
ppois(10, lambda = 4.6)
# 定义函数
f <- function(lambda) {
exp(-lambda) * (lambda + 1) - 0.01
}
# 使用 uniroot 来寻找根
result <- uniroot(f, c(0, 10))
result
ppois(19, lambda = 10)
1-ppois(19, lambda = 10)
#练习
prob1 <- pnorm(19.5, mean = 10, sd = sqrt(10));prob1
#练习
prob1 <- 1- pnorm(19.5, mean = 10, sd = sqrt(10));prob1
1-ppois(0, lambda = 2)
1-ppois(0, lambda = 1)
ppois(0, lambda = 1)
(ppois(0, lambda = 2))^5*(ppois(0, lambda = 1))^2
5*(ppois(0, lambda = 2))^4*(ppois(1, lambda = 2))*(ppois(0, lambda = 1))^2+
2*(ppois(0, lambda = 2))^5*ppois(0, lambda = 1)*ppois(1, lambda = 1)
(ppois(0, lambda = 2))^4*(ppois(1, lambda = 2))*(ppois(0, lambda = 1))^2+
(ppois(0, lambda = 2))^5*ppois(0, lambda = 1)*ppois(1, lambda = 1)
(ppois(0, lambda = 2))^4*(ppois(1, lambda = 2))*(ppois(0, lambda = 1))^2+
(ppois(0, lambda = 2))^5*ppois(0, lambda = 1)*ppois(1, lambda = 1)
ppois(0, lambda = 10)*ppois(1, lambda = 2)+ppois(1, lambda = 10)*ppois(0, lambda = 2)
(dpois(0, lambda = 2))^5*(dpois(0, lambda = 1))^2
5*(dpois(0, lambda = 2))^4*(dpois(1, lambda = 2))*(dpois(0, lambda = 1))^2+
2*(dpois(0, lambda = 2))^5*dpois(0, lambda = 1)*dpois(1, lambda = 1)
dpois(0, lambda = 10)*dpois(1, lambda = 2)+dpois(1, lambda = 10)*dpois(0, lambda = 2)
prob2 <- pnorm(1000, mean = 860, sd = 340) - pnorm(400, mean = 860, sd = 340);prob2
1-pnorm(2000, mean = 860, sd = 340)
pnorm(1000, mean = 860, sd = 340) - pnorm(400, mean = 860, sd = 340)
1-pnorm(2000, mean = 860, sd = 340)
1-ppois(2, lambda = 3.2)
dpois(0, lambda = 1.6)
0.62*0.62
dpois(4, lambda = 0.8)
dpois(4, lambda = 0.8)
pbinom(q=15,size=60,prob=0.33,lower.tail = T,log.p = F)
60*0.33*0.67
60*0.33
sqrt(13.266)
pnorm(69, mean = 65.5, sd = 2.5)
(15-19.8)/3.64
(15.5-19.8)/3.64
pnorm(15, mean = 19.8, sd = 3.64)
pnorm(15.5, mean = 19.8, sd = 3.64)
15*0.33*0.67
60*0.33*0.67
data(mtcars)
plot(mtcars$hp,mtcars$mpg,
xlab="hp",ylab="mpg",
main="Scatter Plot of mpg vs hp")
install.packages("labelled")
install.packages("gtsummary")
install.packages("gtsummary")
install.packages("car")
data_url="https://bit.ly/vrc01_data"
data=read.csv(data_url,header = T)
data_url="https://bit.ly/vrc01_data"
data=read.csv(data_url,header = T)
data_url="https://bit.ly/vrc01_data"
data=read.csv(data_url,header = T)
library(labelled)
library(gtsummary)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
install
install.packages("rlang")
install.packages("rlang")
library(labelled)
library(gtsummary)
install.packages("gtsummary")
install.packages("gtsummary")
install.packages("gtsummary")
install.packages("gtsummary")
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(labelled)
library(rlang)
library(labelled)
library(gtsummary)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans = ifelse(data$shield_glycans <4,"<4",">=4")
data$number_glycans = ifelse(data$shield_glycans <4,"<4",">=4")
library(labelled)
library(labelled)
library(gtsummary)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans = ifelse(data$shield_glycans <4,"<4",">=4")
head(data)
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
install.packages("cli")
install.packages("cli")
packageVersion("cli")
install.packages("cli")
packageVersion("cli")
data_url="https://bit.ly/vrc01_data"
data=read.csv(data_url,header = T)
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans = ifelse(data$shield_glycans <4,"<4",">=4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
install.packages("htmltools")
install.packages("htmltools")
remove.packages("htmltools")
packageVersion("htmltools")
install.packages("htmltools")
install.packages("htmltools")
head(data)
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans = ifelse(data$shield_glycans <4,"<4",">=4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
install.packages("htmltools")
packageVersion("htmltools")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
update.packages("xfun")
update.packages(rmarkdown)
update.packages("rmarkdown")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
install.packages("xfun")
library(labelled)
library(gtsummary)
var_label(data) <- list(
id = "ID",
ab_resistance = "Antibody resistance",
shield_glycans = "Shield glycans",
region = "Region",
env_length = "Length of Env protein"
)
data$number_glycans = ifelse(data$shield_glycans <4,"<4",">=4")
data |>
select("region", "env_length", "ab_resistance", "number_glycans") |>
tbl_summary(by = number_glycans) |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**PNGs in Glycan Shield**") |>
add_overall() |>
add_p()
6/62-4/381
163/775-4/381
9/122-4/381
4/148-4/381
2/92-4/381
(163/775)/(4/381)
(6/62)/(4/381)
(9/122)/(4/381)
(4/148)/(4/381)
(2/92)/(4/381)
(163/107735)/(4/44950)
(163/107735)
420+1.96*(60/sqrt(50))
420-1.96*(60/sqrt(50))
180+1.96*(30/sqrt(10))
180-1.96*(30/sqrt(10))
3*1.96*2
11.76*11.76
head(a)
a=read.csv("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project/data_smoke.csv",header=T,encoding = "UTF-8")
head(a)
a=read.csv("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project/data_smoke.csv",header=T,encoding = "UTF-8")
head(a)
We processed the data as follows: in the 'sex' variable, female=1 and male=0. In the 'smoker' variable, yes=1 and no=0. Each column of data was considered either as an independent variable or a dummy variable in the regression analysis. The data arrangement exhibits a certain randomness, so we designated rows 1-1070 as the training set and rows 1071-1388 as the test set.
options(warn = -1)
a$sex[which(a$sex=='female')]=1
a$sex[which(a$sex=='male')]=0
a$smoker[which(a$smoker=='yes')]=1
a$smoker[which(a$smoker=='no')]=0
a$sex=as.numeric(a$sex)
a$smoker=as.numeric(a$smoker)
head(a)
a=a[-9]
a1=a[c(1:1070),]
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
a$sex=as.factor(a$sex)
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()+ggtitle("Fig.1 Plot of the relationship between sex and charges")+ theme(plot.title = element_text(hjust = 0.5))
str(a)
head(a)
head(a)
unlink("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project/Final Project_cache", recursive = TRUE)
update.packages("ggplot2")
update.packages("rmarkdown")
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Fig.3 Distribution plot of the number of children by gender.")+theme(plot.title = element_text(hjust = 0.5))
a=read.csv("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project/data_smoke.csv",header=T,encoding = "UTF-8")
head(a)
#(4)可视化
library(ggplot2)
library(RColorBrewer)
library(gridExtra)
a$sex=as.factor(a$sex)
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()
xy<-data.frame(a)
p1<-ggplot(xy, aes(age, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("Age frequency distribution plot by gender. ");p1
p2<-ggplot(xy, aes(bmi, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("BMI frequency distribution plot by gender.");p2
grid.arrange(p1,p2)
ggplot(xy,aes(x=children,y=,fill=sex))+geom_bar(stat='identity',position='dodge')
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Distribution plot of the number of children by gender.")
ggplot(a, aes(x=smoker, y=charges,col=sex)) + geom_boxplot()
a=read.csv("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project/data_smoke.csv",header=T,encoding = "UTF-8")
head(a)
a$sex=as.factor(a$sex)
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()
xy<-data.frame(a)
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Fig.3 Distribution plot of the number of children by gender.")+theme(plot.title = element_text(hjust = 0.5))
#2描述性分析
rm(list=ls())
a=read.csv("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project/data_smoke.csv",header=T,encoding = "UTF-8")
head(a)
a$sex[which(a$sex=='female')]=1
a$sex[which(a$sex=='male')]=0
a$smoker[which(a$smoker=='yes')]=1
a$smoker[which(a$smoker=='no')]=0
a$sex=as.numeric(a$sex)
a$smoker=as.numeric(a$smoker)
head(a)
a=a[-9]
a1=a[c(1:1070),]
library(ggplot2)
a$sex=as.factor(a$sex)
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()+ggtitle("Fig.1 Plot of the relationship between sex and charges")+ theme(plot.title = element_text(hjust = 0.5))
xy<-data.frame(a)
p1<-ggplot(xy, aes(age, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("Fig.2 Age frequency distribution plot by gender. ")+ theme(plot.title = element_text(hjust = 0.5))
p2<-ggplot(xy, aes(bmi, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("BMI frequency distribution plot by gender.")+ theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p1,p2)
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Fig.3 Distribution plot of the number of children by gender.")+theme(plot.title = element_text(hjust = 0.5))
ggplot(a, aes(x=smoker, y=charges,col=sex)) + geom_boxplot()+
ggtitle("Fig.4 Plot of the relationship between smoking and insurance charges")+theme(plot.title = element_text(hjust = 0.5))
library(gtsummary)
lm1 <- lm(charges ~ as.factor(smoker) + age + sex + bmi + children + v1 + v2 + v3, data = a1)
tbl_regression(lm1)
library(ggplot2)
a$sex=as.factor(a$sex)
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()+ggtitle("Fig.1 Plot of the relationship between sex and charges")+ theme(plot.title = element_text(hjust = 0.5))
rmarkdown::render("Final-Project.Rmd", envir = globalenv())
getwd()
setwd("D:/吴小妞/Emory/2024 Fall/Data Science/Final Project")
rmarkdown::render("Final-Project.Rmd", envir = globalenv())
rmarkdown::render("Final Project.Rmd", envir = globalenv())
install.packages("knitr")
install.packages("knitr")
install.packages("evaluate")
install.packages("evaluate")
lm.aic=step(lm2,trace=F)
lm2=lm(charges~smoker+X.U.FEFF.age+sex+bmi+children+v1+v2+v3,data=a1)
lm2=lm(charges~smoker+age+sex+bmi+children+v1+v2+v3,data=a1)
plot(lm2,which=c(1:4))
lm2=lm(charges~smoker+age+sex+bmi+children+v1+v2+v3,data=a1)
lm.aic=step(lm2,trace=F)
summary(lm.aic)
library(gtsummary)
tbl_regression(lm.aic)
p1<-ggplot(xy, aes(age, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("Fig.2 Age frequency distribution plot by gender. ")+ theme(plot.title = element_text(hjust = 0.5))
p1
p2<-ggplot(xy, aes(bmi, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("BMI frequency distribution plot by gender.")+ theme(plot.title = element_text(hjust = 0.5))
p2
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Fig.3 Distribution plot of the number of children by gender.")+theme(plot.title = element_text(hjust = 0.5))
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Fig.3 Distribution plot of the number of children by gender.")+theme(plot.title = element_text(hjust = 0.5))
ggplot(data=xy,aes(x=children,fill=sex))+geom_histogram(alpha=0.8,position = "dodge",bins = 10)+ggtitle("Fig.3 Distribution plot of the number of children by gender.")+theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Number of children/dependents", y = "Count")
ggplot(a, aes(x=smoker, y=charges,col=sex)) + geom_boxplot()+
ggtitle("Fig.4 Plot of the relationship between smoking and insurance charges")+theme(plot.title = element_text(hjust = 0.5))
a$sex <- factor(a$sex, levels = c(0, 1), labels = c("Male", "Female"))
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()+ggtitle("Fig.1 Plot of the relationship between sex and charges")+ theme(plot.title = element_text(hjust = 0.5))
a$sex=as.factor(a$sex)
ggplot(a, aes(x=sex, y=charges,col=sex)) + geom_boxplot()+ggtitle("Fig.1 Plot of the relationship between sex and charges")+ theme(plot.title = element_text(hjust = 0.5))
p1<-ggplot(xy, aes(age, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("Fig.2 Age frequency distribution plot by gender. ")+ theme(plot.title = element_text(hjust = 0.5))
p1
a$sex <- factor(a$sex, levels = c(0, 1), labels = c("Male", "Female"))
p1<-ggplot(xy, aes(age, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("Fig.2 Age frequency distribution plot by gender. ")+ theme(plot.title = element_text(hjust = 0.5))
p1
p1<-ggplot(xy, aes(age, fill = sex)) + geom_density(alpha = 0.2)+ggtitle("Fig.2 Age frequency distribution plot by gender. ")+ theme(plot.title = element_text(hjust = 0.5))++
scale_color_manual(values = c("blue", "pink"))
